{
  "hash": "63ee4ec0428be643870ae7cd3fd03175",
  "result": {
    "markdown": "---\ntitle: \"Regression discontinuity design in R\"\noutput: html_document\ndate: \"2023-03-20\"\n---\n\n\n## Description\nCode to demonstrate matching in R. Adapted from the supplementary materials from Butsic, V. et al. (2017): Quasi-experimental methods enable stronger inferences from observational data in ecology. (c) Matthias Baumann (2017-01-10).\t\n\nIn the Butsic et al. paper, they used the example of the impact of wildfire on species richness. Here, we will simulate data with a known treatment effect of fire on species richness. We will then compare the estimated effect we get through a naive ordinary least squares (OLS) regression approach to the effect we estimate when we use RDD methods .\n\n## Set up\nLoad required packages. In this demo, we will use the package \"rdrobust\" for the matching process.\n\n\n\n\n## Simulate data\nSimulated data is handy because we know the true effect of the treatment variable. Here, we'll write a function to simulate a dataset where we know the true effect of fire on species richness.\n\n::: {.cell}\n\n```{.r .cell-code}\n### Function to simulate data and write it as a dataframe\nsimulate_data <- function(){\n  \n  ### Create variables in a dataframe\n  \n  ### Make column for observation ID\n  df <- data.frame(id = seq(1, 1000),\n                   \n                   ### Add columns for explanatory variables\n                   \n                   ### Add column for treatment variable\n                   fire = c(rep(0, 500), rep(1, 500)),\n                   \n                   ### And the rest of the covariates\n                   distance = c(runif(500, min = -100, max = 0), \n                             runif(500, min = 0, max = 100)),\n                   slope = runif(1000, min = 50, max = 100),\n                   elevation = runif(1000, min = 150, max = 185),\n                   stream = runif(1000, min = 0, max = 1),\n                   \n                   ### And the error term\n                   error = rnorm(1000, mean = 0, sd = 2))\n  \n  ### Add land use history variable, depends on outcomes of distance\n  df <- df %>%\n    mutate(land_use = ifelse(distance > -50 & distance < 5, \n                             1, \n                             0))\n  \n  \n  \n  ### Make column for outcome variable (species richness) \n  df <- df %>%\n    mutate(species_richness = 1 + 5*fire + 0.7*slope + 0.05*elevation + 2*stream + 5*land_use + error)\n  return(df)\n}\n```\n:::\n\n*We know that the true effect of the treatment variable (fire) is a 5x increase in the response variable (species richness).*\n\n## Estimate the effect using ordinary least squares\n\n::: {.cell}\n\n```{.r .cell-code}\n### Write a function to generate data and analyze using OLS \nols_fun <- function(){\n  \n  ### Simulate the dataset\n  data <- simulate_data()\n  \n  ### Run OLS regression\n  ols <- lm(species_richness ~ fire + slope + elevation + stream, \n            data = data)\n  \n  ### Extract model coefficients and standard error\n  fire_coeff <- coef(summary(ols))[\"fire\", \"Estimate\"]\n  fire_se <- coef(summary(ols))[\"fire\", \"Std. Error\"]\n  list <- list(fire_coeff, fire_se)\n}\n\n### Apply the function to 100 replicates\nols_sim <- replicate(100, ols_fun())\n\n### Extract the model estimates\nols_fire_est <- unlist(ols_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(ols_fire_est), sd(ols_fire_est), \n  min(ols_fire_est), max(ols_fire_est))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.7712594 0.1597828 2.2892994 3.1005157\n```\n:::\n\n```{.r .cell-code}\n### Extract the standard deviations\nols_fire_sd <- unlist(ols_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum standard deviation of coefficient estimates\nc(mean(ols_fire_sd), sd(ols_fire_sd), \n  min(ols_fire_sd), max(ols_fire_sd))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.176301725 0.003926326 0.165568227 0.187241760\n```\n:::\n:::\n\n*The effect estimated by OLS is incorrect-- it should be 5.*\n\n## Use regression discontinuity\n\n::: {.cell}\n\n```{.r .cell-code}\n### Simulate the dataset\ndata_rdd <- simulate_data()\n\n### look at the distribution of sample points along the running variable\n# ggplot(data = data_rdd, aes(x = distance)) + \n#   geom_histogram() +\n#   geom_vline(xintercept = 0)\n# \n# ### look at the distribution of the outcome variable along the running variable\n# ggplot(data = data_rdd, aes(x = distance, y = species_richness)) +\n#   geom_point() +\n#   geom_vline(xintercept = 0)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}